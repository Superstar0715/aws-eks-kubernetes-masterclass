apiVersion: apps/v1
kind: Deployment
metadata:
  name: usermgmt-microservice
  labels:
    app: usermgmt-restapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: usermgmt-restapp
  template:
    metadata:
      labels:
        app: usermgmt-restapp
    spec:
      initContainers:
        - name: init-db
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z mysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']
      containers:
      - name: usermgmt-restapp
        image: stacksimplify/usermanagement-microservice:1.0.0
        resources:
          requests:
            memory: "128Mi"
            cpu: "500m"
          limits:
            memory: "256Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8095
        env:
          - name: AWS_RDS_HOSTNAME
            value: "mysql"
          - name: AWS_RDS_PORT
            value: "3306"
          - name: AWS_RDS_DB_NAME
            value: "usermgmt"
          - name: AWS_RDS_USERNAME
            value: "root"
          - name: AWS_RDS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-db-password
                key: db-password
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 8095
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 8095
          initialDelaySeconds: 30
          periodSeconds: 10